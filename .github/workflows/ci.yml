name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-python-39:
    runs-on: ubuntu-latest
    name: Test Python 3.9
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx requests
    
    - name: Run basic tests
      run: |
        python test_basic.py
      timeout-minutes: 5
    
    - name: Run full tests
      run: |
        python test_api.py
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      timeout-minutes: 10

  test-python-310:
    runs-on: ubuntu-latest
    name: Test Python 3.10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx requests
    
    - name: Run basic tests
      run: |
        python test_basic.py
      timeout-minutes: 5
    
    - name: Run full tests
      run: |
        python test_api.py
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      timeout-minutes: 10

  test-python-311:
    runs-on: ubuntu-latest
    name: Test Python 3.11
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx requests
    
    - name: Run basic tests
      run: |
        python test_basic.py
      timeout-minutes: 5
    
    - name: Run full tests
      run: |
        python test_api.py
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      timeout-minutes: 10

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-python-39, test-python-310, test-python-311]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and test Docker image
      run: |
        docker build -t fitscore-calculator .
        docker run -d --name test-container -p 8000:8000 fitscore-calculator
        sleep 10
        curl -f http://localhost:8000/health
        docker stop test-container
        docker rm test-container

  deploy:
    runs-on: ubuntu-latest
    needs: [docker-build]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests jinja2
    
    - name: Create static files
      run: |
        mkdir -p docs
        # Create a simple HTML interface for the FitScore calculator
        cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>FitScore Calculator</title>
            <style>
                body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                .container { background: #f5f5f5; padding: 20px; border-radius: 8px; }
                .form-group { margin-bottom: 15px; }
                label { display: block; margin-bottom: 5px; font-weight: bold; }
                textarea { width: 100%; height: 150px; padding: 10px; border: 1px solid #ddd; border-radius: 4px; }
                input[type="text"] { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; }
                button { background: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
                button:hover { background: #0056b3; }
                .result { margin-top: 20px; padding: 15px; background: white; border-radius: 4px; }
                .score { font-size: 24px; font-weight: bold; color: #007bff; }
                .submittable { color: green; font-weight: bold; }
                .not-submittable { color: red; font-weight: bold; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üéØ FitScore Calculator</h1>
                <p>Advanced candidate evaluation system with AI-powered scoring</p>
                
                <form id="fitscoreForm">
                    <div class="form-group">
                        <label for="resume">Resume Text:</label>
                        <textarea id="resume" name="resume" placeholder="Paste the candidate's resume here..." required></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="jobDescription">Job Description:</label>
                        <textarea id="jobDescription" name="jobDescription" placeholder="Paste the job description here..." required></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="apiKey">OpenAI API Key (optional):</label>
                        <input type="text" id="apiKey" name="apiKey" placeholder="sk-...">
                    </div>
                    
                    <button type="submit">Calculate FitScore</button>
                </form>
                
                <div id="result" class="result" style="display: none;">
                    <h2>FitScore Results</h2>
                    <div class="score">Total Score: <span id="totalScore">-</span></div>
                    <div id="submittableStatus"></div>
                    
                    <h3>Category Scores:</h3>
                    <ul>
                        <li>Education: <span id="educationScore">-</span></li>
                        <li>Career Trajectory: <span id="careerScore">-</span></li>
                        <li>Company Relevance: <span id="companyScore">-</span></li>
                        <li>Tenure Stability: <span id="tenureScore">-</span></li>
                        <li>Most Important Skills: <span id="skillsScore">-</span></li>
                        <li>Bonus Signals: <span id="bonusScore">-</span></li>
                        <li>Red Flags Penalty: <span id="redFlagsScore">-</span></li>
                    </ul>
                    
                    <h3>Recommendations:</h3>
                    <ul id="recommendations"></ul>
                </div>
            </div>
            
            <script>
                document.getElementById('fitscoreForm').addEventListener('submit', async function(e) {
                    e.preventDefault();
                    
                    const formData = new FormData();
                    formData.append('resume_text', document.getElementById('resume').value);
                    formData.append('job_description', document.getElementById('jobDescription').value);
                    formData.append('use_gpt4', 'true');
                    
                    const apiKey = document.getElementById('apiKey').value;
                    if (apiKey) {
                        formData.append('openai_api_key', apiKey);
                    }
                    
                    try {
                        const response = await fetch('/calculate-fitscore-form', {
                            method: 'POST',
                            body: formData
                        });
                        
                        const result = await response.json();
                        
                        if (result.success) {
                            document.getElementById('totalScore').textContent = result.total_score;
                            document.getElementById('educationScore').textContent = result.education_score;
                            document.getElementById('careerScore').textContent = result.career_trajectory_score;
                            document.getElementById('companyScore').textContent = result.company_relevance_score;
                            document.getElementById('tenureScore').textContent = result.tenure_stability_score;
                            document.getElementById('skillsScore').textContent = result.most_important_skills_score;
                            document.getElementById('bonusScore').textContent = result.bonus_signals_score;
                            document.getElementById('redFlagsScore').textContent = result.red_flags_penalty;
                            
                            const statusElement = document.getElementById('submittableStatus');
                            if (result.submittable) {
                                statusElement.innerHTML = '<span class="submittable">‚úÖ SUBMITTABLE CANDIDATE</span>';
                            } else {
                                statusElement.innerHTML = '<span class="not-submittable">‚ùå RECOMMENDED REJECT</span>';
                            }
                            
                            const recommendationsList = document.getElementById('recommendations');
                            recommendationsList.innerHTML = '';
                            result.recommendations.forEach(rec => {
                                const li = document.createElement('li');
                                li.textContent = rec;
                                recommendationsList.appendChild(li);
                            });
                            
                            document.getElementById('result').style.display = 'block';
                        } else {
                            alert('Error: ' + result.error);
                        }
                    } catch (error) {
                        alert('Error: ' + error.message);
                    }
                });
            </script>
        </body>
        </html>
        EOF
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 
